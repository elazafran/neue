{"version":3,"file":"modal.js","sources":["../bower_components/almond/almond.js","../js/events.js","../js/modal.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","nodeIdCompat","jsSuffixRegExp","test","replace","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","topics","subUid","publish","topic","subscribers","len","func","subscribe","token","toString","push","unsubscribe","m","$","window","Modernizr","Events","modalReady","queuedModal","$document","document","$chrome","$modalContainer","$skipLink","$closeLink","$modal","closeable","isOpen","_addCloseButton","$el","type","skipForm","prepend","on","event","preventDefault","submit","open","options","animated","closeButton","attr","offsetTop","scrollTop","hide","show","css","addClass","cssanimations","_cleanup","scrollOffset","removeClass","find","remove","close","parseInt","location","hash","one","_openHandler","href","this","data","_closeHandler","target","hasClass","ready","$body","append","each","appendTo","DS","Modal"],"mappings":"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","sourcesContent":["/**\n * @license almond 0.2.9 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                name = baseParts.concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"bower_components/almond/almond\", function(){});\n\n","/**\n * Pub/Sub events: Allows modules to communicate via publishing\n * and subscribing to events.\n *\n * Based on Addy Osmani's Pubsubz, licensed under the GPL.\n * https://github.com/addyosmani/pubsubz\n * http://jsfiddle.net/LxPrq/\n */\n\ndefine('js/events',[],function() {\n  \"use strict\";\n\n  var topics = {};\n  var subUid = -1;\n\n  var publish = function(topic, args) {\n    if (!topics[topic]) {\n      return false;\n    }\n\n    setTimeout(function() {\n      var subscribers = topics[topic],\n      len = subscribers ? subscribers.length : 0;\n\n      while(len--) {\n        subscribers[len].func(topic, args);\n      }\n    }, 0);\n\n    return true;\n  };\n\n  var subscribe = function(topic, func) {\n    if (!topics[topic]) {\n      topics[topic] = [];\n    }\n\n    var token = (++subUid).toString();\n    topics[topic].push({\n      token: token,\n      func: func\n    });\n\n    return token;\n  };\n\n  var unsubscribe = function(token) {\n    for (var m in topics) {\n      if (topics[m]) {\n        for (var i = 0, j = topics[m].length; i < j; i++) {\n          if (topics[m][i].token === token) {\n            topics[m].splice(i, 1);\n            return token;\n          }\n        }\n      }\n    }\n\n    return false;\n  };\n\n  // Export public API\n  return {\n    publish: publish,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  };\n});\n\n","/**\n * @module neue/modal\n * Show/hide modals. To link to a modal, add a `data-modal-href` attribute\n * pointing to the selector for the modal you want to show.\n *\n * @example\n * // <a href=\"http://www.example.com\" data-modal-href=\"#modal--example\">Click!</a>\n * // <div data-modal id=\"modal--example\" role=\"dialog\">\n * //   <!-- content -->\n * // </div>\n *\n */\n\ndefine('js/modal',['require','./events'],function(require) {\n  \"use strict\";\n\n  var $ = window.jQuery;\n  var Modernizr = window.Modernizr;\n  var Events = require(\"./events\");\n\n  var modalReady = false;\n  var queuedModal = null; // Modals queued to be shown on document.ready\n\n  // Cache commonly used jQuery objects\n  var $document = $(document);\n  var $chrome = $(\".chrome\");\n  var $modalContainer = null;\n\n  // UI elements:\n  var $skipLink = $(\"<a href='#' class='js-close-modal js-modal-generated modal-close-button -alt'>skip</a>\");\n  var $closeLink = $(\"<a href='#' class='js-close-modal js-modal-generated modal-close-button'>&#215;</a>\");\n\n  // The currently open modal\n  var $modal = null;\n\n  // Whether this modal can be closed by the user\n  var closeable = false;\n\n  // Return a boolean if modal is open or not\n  var isOpen = function() {\n    return ($modal !== null);\n  };\n\n  // Programmatically add close button to modal.\n  var _addCloseButton = function($el, type, skipForm) {\n    switch(type) {\n      case \"skip\":\n        // Add a skip button, which delegates to the submitting the form with the given ID\n        $el.prepend( $skipLink );\n        $skipLink.on(\"click\", function(event) {\n          event.preventDefault();\n          $(skipForm).submit();\n        });\n        closeable = false;\n        break;\n\n      case \"false\":\n      case \"0\":\n        closeable = false;\n        break;\n\n      default:\n        $el.prepend($closeLink);\n        closeable = true;\n    }\n  };\n\n  /**\n   * Open a new modal\n   * @param {jQuery}  $el                         Element that will be placed inside the modal.\n   * @param {boolean} [options.animated=true]     Use animation for opening the modal.\n   * @param {boolean} [options.closeButton]       Override `data-modal-close` attribute.\n   * @param {boolean} [options.skipForm]          Override `data-modal-skip-form` attribute.\n   */\n  var open = function($el, options) {\n    options = options || {};\n    options.animated = typeof options.animated === \"boolean\" ? options.animated : true;\n    options.closeButton = typeof options.closeButton !== \"undefined\" ? options.closeButton : $el.attr(\"data-modal-close\");\n    options.skipForm = typeof options.skipForm !== \"undefined\" ? options.skipForm : $el.attr(\"data-modal-skip-form\");\n\n    if($el.length === 0) {\n      // If modal does not exist, don't try to open it.\n      return false;\n    }\n\n    // If modal markup isn't initialized, save and display once it is.\n    if(!modalReady) {\n      queuedModal = {\"$el\": $el, \"options\": options};\n      return false;\n    }\n\n    // Read from DOM\n    var offsetTop = \"-\" + $document.scrollTop() + \"px\";\n\n    // Add generated content\n    _addCloseButton($el, options.closeButton, options.skipForm);\n\n    if(!isOpen()) {\n      // Set up overlay and show modal\n      $chrome.css(\"top\", offsetTop);\n      $chrome.addClass(\"has-modal\");\n      $modalContainer.css(\"display\", \"block\");\n      if(options.animated && Modernizr.cssanimations) {\n        $modalContainer.addClass(\"animated-open\");\n      }\n      $el.css(\"display\", \"block\");\n    } else {\n      // Modal is already open, so just replace current content\n      $modal.hide();\n      $el.show();\n    }\n\n    // Make sure we're scrolled to the top of the modal.\n    setTimeout(function() {\n      $document.scrollTop(0);\n    }, 50);\n\n    // We provide an event that other modules can hook into to perform custom functionality when\n    // a modal opens (such as preparing things that are added to the DOM, etc.)\n    Events.publish(\"Modal:Open\", $el);\n\n    // Keep track of whether modal is open or not\n    $modal = $el;\n  };\n\n  // Cleanup after modal animates out\n  var _cleanup = function(scrollOffset) {\n    $modalContainer.css(\"display\", \"none\");\n    $modalContainer.removeClass(\"animated-close\");\n    $modal.css(\"display\", \"none\");\n\n    // Remove any generated content\n    $modal.find(\".js-modal-generated\").remove();\n\n    // Remove overlay and reset scroll position\n    $chrome.removeClass(\"has-modal\");\n    $chrome.removeClass(\"animated-close\");\n    $chrome.css(\"top\", \"\");\n    $document.scrollTop(scrollOffset);\n\n    // Get rid of reference to closed modal\n    $modal = null;\n  };\n\n  /**\n   * Close the active modal.\n   * @param {boolean} [options.animated=true] Use animation for closing the modal.\n   */\n  var close = function(options) {\n    options = options || {};\n    options.animated = typeof options.animated !== \"undefined\" ? options.animated : true;\n\n    var scrollOffset = parseInt($chrome.css(\"top\")) * -1;\n\n    // Remove URL hash for modal from browser\n    if(window.location.hash === \"#\" + $modal.attr(\"id\")) {\n      window.location.hash = \"/\";\n    }\n\n    if(options.animated && Modernizr.cssanimations) {\n      $chrome.addClass(\"animated-close\");\n      $modalContainer.addClass(\"animated-close\");\n      $modalContainer.one(\"webkitAnimationEnd oanimationend msAnimationEnd animationend\", function() {\n        _cleanup(scrollOffset);\n      });\n    } else {\n      _cleanup(scrollOffset);\n    }\n\n    // We provide an event that other modules can hook into to perform custom functionality when\n    // a modal opens (such as preparing things that are added to the DOM, etc.)\n    Events.publish(\"Modal:Close\", $modal);\n  };\n\n  // Click handler for opening a new modal\n  var _openHandler = function(event) {\n    event.preventDefault();\n    var href = $(this).data(\"modal-href\");\n\n    open($(href));\n  };\n\n  // Click handler for closing a modal\n  var _closeHandler = function(event) {\n    // Don't let the event bubble.\n    if(event.target !== this) {\n      return;\n    }\n\n    // Only close on clicking overlay if this modal has a \"x\" close button\n    if( $(this).hasClass(\"js-close-modal\") || closeable ) {\n      // Override default link behavior.\n      event.preventDefault();\n      close();\n    }\n  };\n\n  $document.ready(function() {\n    var $body = $(\"body\");\n\n    // Create container for modals\n    $modalContainer = $(\"<div class='modal-container'></div>\");\n    $body.append($modalContainer);\n\n    // Prepare the DOM!\n    $(\"[data-modal]\").each(function() {\n      $(this).appendTo($modalContainer);\n      $(this).attr(\"hidden\", true);\n    });\n\n    //If there's a hash in the URL, check if it's a modal and load it\n    var hash = window.location.hash;\n    if(hash && hash !== \"#/\" && $(hash) && typeof $(hash).data(\"modal\") !== \"undefined\") {\n      open($(hash));\n    }\n\n    modalReady = true;\n    if(queuedModal !== null) {\n      open(queuedModal.$el, queuedModal.options);\n    }\n\n    // Bind events to open & close modal\n    $body.on(\"click\", \"[data-modal-href]\", _openHandler);\n    $body.on(\"click\", \".modal-container\", _closeHandler);\n    $body.on(\"click\", \".js-close-modal\", _closeHandler);\n  });\n\n  // Attach to namespaced window object\n  window.DS = window.DS || {};\n  window.DS.Modal = {\n    isOpen: isOpen,\n    open: open,\n    close: close,\n    Events: Events\n  };\n\n  return window.DS.Modal;\n});\n\n\n"]}